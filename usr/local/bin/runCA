#!/bin/sh

#####################
# GENERAL VARIABLES #
#####################

CA_PATH="/etc/pki/CA"
SSL_CNF_FILE=$CA_PATH/openssl.cnf
SSL_CNF_FILE_TMP=$CA_PATH/openssl.cnf.tmp
LOG=$CA_PATH/log/ca.log
index_file=$CA_PATH/index.txt
ssl_srv_cnf_tmp=$CA_PATH/srv.cnf.tmp
ssl_srv_cnf="/var/www/CA/mgt/restricted/resources/host.conf"
ip=`ifconfig | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1}'`

#########################################################################

do_ins () {

 echo '01' > $CA_PATH/serial
 touch $CA_PATH/index.txt

 while [ "$ICC" == "" ] || [ ${#ICC} -gt 2 ] ; do
   ICC=`dialog --entry --text "Insert your two letters ISO Country Code (ex. IT for Italy):"`
   ck_exit_code
 done
 ICC=`echo $ICC | awk '{ print toupper($ICC) }'`

 while [ "$OU" == "" ] ; do
   OU=`dialog --entry --text "Insert your Organization Unit (ex. GILDA):"`
   ck_exit_code
 done
 OU=`echo $OU| awk '{ print toupper($OU) }' | tr -s " " -`

 while [ "$EMAIL" == "" ] ; do
   EMAIL=`dialog --entry --text "Insert administrator's e-mail:"`
   ck_exit_code
 done

 ins_pass

 question=`dialog --question --text="Would you like to upload a LOGO?"`
 if [ $? -eq 0 ] ;then
  while [ "$LOGO" == "" ] ; do
   LOGO=`dialog --file-selection`
   ck_exit_code
  done
 fi

 mv -f $LOGO /var/www/CA/icons
 sed -e "s/ICC/$ICC/g" -e "s/OU/$OU/g" -e "s/CN/$OU CA/g" $SSL_CNF_FILE_TMP > $SSL_CNF_FILE
 sed -e "s/ICC/$ICC/g" -e "s/OU/$OU/g" $ssl_srv_cnf_tmp > $ssl_srv_cnf

 sed -e "s/CN/$ICC/g" -e "s/CA_NAME/$OU/g" -e "s/EMAIL/$EMAIL/g" -e "s/LOGO/`echo $LOGO | awk -F '/' '{print $NF}'`/g" -e "s/DBPASS/${passwd}`date +%Y`/g" /var/www/CA/phpinc/varsCA.inc.tmp > /var/www/CA/phpinc/varsCA.inc


 openssl req -x509 -newkey rsa -out $CA_PATH/CAcert.pem -outform PEM -days 1825 -config $SSL_CNF_FILE -sha1 -passout pass:$passwd
 chown root.apache $CA_PATH/CAcert.pem

 do_crl

 /etc/init.d/httpd restart

 chkconfig httpd on

 /etc/init.d/sendmail restart

 chkconfig sendmail on

 /etc/init.d/mysqld start

 chkconfig mysqld on

 mysqladmin -u root password "${passwd}`date +%Y`"

 mysql -u root -p${passwd}`date +%Y` < $CA_PATH/RA_database.sql

 RAcode=`cat /dev/urandom| tr -dc '0-9' | fold -w 8 | head -1`

 mysql -u root -p${passwd}`date +%Y` RA --exec "insert into users (FLname,email,DN,Institute,doctype,docnumber,authority,date_of_issue,RAcode,isRA) values('','$EMAIL','','','','','','','$RAcode','N')"

 dialog --info --text="RAcode is $RAcode"

 dialog --info --text="$OU Certification Authority is ready and available at https://$ip/CA"

 rm -rf $CA_PATH/rpmbuild
}
#########################################################################

do_RA (){
   mysqlpswd="`php -r 'require ("/var/www/CA/phpinc/varsCA.inc"); echo $dbpass;'`"
   email=""

   while [ "$email" == "" ] ; do
     email=`dialog --entry --text "Insert e-mail address of new RA"`
     exist="`mysql -s -N -u root -p${mysqlpswd} RA --exec "select email from users where email='$email' and DN like '%Personal%'"`"
     if [ "$exist" == "" ] ; then
       dialog --error --text="Email address not found"
       main
     fi
   done

   CN="`mysql -s -N -u root -p${mysqlpswd} RA --exec "select DN from users where email='$email'" | awk -F 'CN=' '{print $2}'`"

   isRA="`mysql -s -N -u root -p${mysqlpswd} RA --exec "select isRA from users where email='$email'"`"

   if [ "$isRA" == "Y" ]; then
     dialog --warning --text="$email --> <b>$CN</b> is already set as RA"
     dialog --question --text "Do you want to unset it as RA?"
     if [ $? = 0 ] ; then
       mysql -s -N -u root -p${mysqlpswd} RA --exec "update users set isRA='N' where email='$email'"
       dialog --info --text="<b>$CN</b> is not a RA since now"
     fi
   else
     dialog --info --text="$email --> <b>$CN</b> is not a RA"
     dialog --question --text "Do you want to add it as RA?"
     if [ $? = 0 ] ; then
       mysql -s -N -u root -p${mysqlpswd} RA --exec "update users set isRA='Y' where email='$email'"
       L="`mysql -s -N -u root -p${mysqlpswd} RA --exec "select Institute from users where email='$email'"`"
       dialog --info --text="<b>$CN</b> is now a RA for <b>$L</b>"
     fi
   fi

 main

}
#########################################################################

do_crl () {
 openssl ca -gencrl -out $CA_PATH/crl/crl.pem -config $CA_PATH/openssl.cnf -passin pass:$passwd &> $LOG

 openssl crl -in $CA_PATH/crl/crl.pem -outform der -out $CA_PATH/crl/crl.der &> $LOG

 cp $CA_PATH/crl/crl.der /var/www/CA/crl

 dialog --info --text="The CRL has been created"

 hash=`openssl x509 -in $CA_PATH/CAcert.pem -noout -hash`
 oldhash=`openssl x509 -in $CA_PATH/CAcert.pem -noout -subject_hash_old`

 if [ ! -e /var/www/CA/ca_*-1.0-1.noarch.rpm ] ;then

   cert_dir="/etc/grid-security/certificates"
   build_cert_dir="$CA_PATH/rpmbuild/BUILDROOT/ca_$OU-1.0-1.x86_64/etc/grid-security/certificates"

   mkdir -p $CA_PATH/rpmbuild/{BUILD,BUILDROOT/ca_$OU-1.0-1.x86_64/etc/grid-security/certificates,RPMS,SOURCES,SPECS,SRPMS,RPMS/i386}

   openssl crl -in $CA_PATH/crl/crl.pem -text > $build_cert_dir/$OU.r0

   cp $CA_PATH/CAcert.pem $build_cert_dir/$OU.0

   echo "https://$ip/CA/crl.crl" > $build_cert_dir/$OU.crl_url

   cat <<EOF > $build_cert_dir/$OU.signing_policy 
access_id_CA            X509    '`openssl x509 -in $CA_PATH/CAcert.pem -noout -subject | awk -F 'subject= ' '{print $2}'`'
pos_rights              globus  CA:sign
cond_subjects           globus  '"/C=$ICC/O=$OU/*"'
EOF

   sed -e "s/PASSWD/$passwd/g" /etc/cron.hourly/crl.sh.tmp > /etc/cron.hourly/crl.sh

   sed -e "s/CA_NAME/`echo $OU | sed -e "s/ /-/g"`/g" $CA_PATH/ca.spec.tmp > $CA_PATH/ca.spec

   cd $build_cert_dir

   ln -s $OU.0 $hash.0
   ln -s $OU.crl_url $hash.crl_url
   ln -s $OU.r0 $hash.r0
   ln -s $OU.signing_policy $hash.signing_policy
   ln -s $OU.0 $oldhash.0
   ln -s $OU.crl_url $oldhash.crl_url
   ln -s $OU.r0 $oldhash.r0
   ln -s $OU.signing_policy $oldhash.signing_policy

   rpmbuild -ba $CA_PATH/ca.spec

   cp -f $CA_PATH/rpmbuild/RPMS/noarch/ca_$OU-1.0-1.noarch.rpm /var/www/CA

 else
   openssl crl -in $CA_PATH/crl/crl.pem -text > $cert_dir/$hash.r0
   main
 fi
}
#########################################################################

ins_pass () {
 while [ "$passwd" == "" ] ; do
   passwd=`dialog --entry --hide-text --text "Insert private key password:"`
   ck_exit_code
 done
}
#########################################################################

do_reset () {

  answ=`dialog --question --text="Are you sure to reset the CA?"`

  if [ $? = 0 ] ; then 

    /etc/init.d/mysqld stop | dialog --progress --title="Stopping mysql server" --text="waiting" --percentage=40 --auto-close 
 
    rm -rf /var/lib/mysql

    rm -f $CA_PATH/CAcert.pem $CA_PATH/private/CAkey.pem $CA_PATH/newcerts/* $CA_PATH/crl/* $CA_PATH/index.txt $CA_PATH/htdocs/CAtmp/* CA_PATH/servers/* $CA_PATH/log/* /var/www/CA/phpinc/varsCA.inc $SSL_CNF_FILE $ssl_srv_cnf $cert_dir /var/www/CA/ca_*.rpm  

    echo '01' > $CA_PATH/serial

    touch $CA_PATH/index.txt

    passwd=""
  
    dialog --info --text "$OU CA has been reset"

    do_ins

  else
   
   main

  fi
}
#########################################################################

error () {
   if [ $? -eq 1 ] ; then
      dialog --error --text "ERROR while signing the request $request_file : \n `cat $LOG`"
      continue
   else 
      dialog --info --text "The request $request_file has been signed with success"
   fi
}
#########################################################################

ck_exit_code () {
   if [ $? -eq 1 ] ; then
      exit
   fi
}
#########################################################################

do_sign () {

 mysqlpswd="`php -r 'require ("/var/www/CA/phpinc/varsCA.inc"); echo $dbpass;'`"
 whatreq=`dialog --text "Make your choise: " --list --radiolist --column="Select" --column="Description" True "User or Robot" False "Server"`
 case $whatreq in
   "User or Robot" );;
   "Server" );;
   "" ) exit;;
 esac
 
 requests_path="$CA_PATH/htdocs/CAtmp"
 cd $requests_path
 requests=`dialog --file-selection --multiple`

 if [ "$requests" != "" ]; then
   tot_req_selected=`echo $requests | awk -F "|" '{print NF}'`
   ins_pass
   for i in `seq 1 $tot_req_selected` ; do
      request_file=`echo $requests | awk -F "|" '{print $'$i'}'`

      serial=`cat $CA_PATH/serial`

      if [ "$whatreq" == "User or Robot" ] ;then
        extension=`echo $request_file | awk -F '.' '{print $NF}'`
        if [ "$extension" == "der" ]; then
          SCRIPT_PL="gucert-IE.pl"

          openssl base64 -d < $request_file | openssl req -config $CA_PATH/openssl.cnf -inform der -outform pem > /tmp/richiesta.pem &> $LOG 
          openssl ca -config $CA_PATH/openssl.cnf -policy policy_match -passin pass:$passwd -batch -noemailDN -infiles /tmp/richiesta.pem &> $LOG

          error

          openssl crl2pkcs7 -certfile $CA_PATH/newcerts/$serial.pem -in $CA_PATH/newcerts/$serial.pem -out $CA_PATH/newcerts/$serial.pkcs7 -nocrl &> $LOG

          error

          rm -f /tmp/richiesta.pem
        else
          SCRIPT_PL="gucert.pl"

          $CA_PATH/bin/spkafix $request_file

          openssl ca -config $CA_PATH/openssl.cnf -policy policy_match -spkac $request_file -passin pass:$passwd -batch -noemailDN &> $LOG

         error
  
        fi
      else
        if [ "$whatreq" == "Server" ] ;then
          openssl ca -config $CA_PATH/openssl.cnf -policy policy_match -noemailDN -in $request_file -passin pass:$passwd -batch&> $LOG
        fi

        error

      fi

      send_mail "$whatreq"

      rm -f $request_file

      DN="`openssl x509 -in $CA_PATH/newcerts/$serial.pem -noout -subject | awk -F 'subject= ' '{print $2}'`"

      if [ "`cat $CA_PATH/serial`" == "02" ] && [ "$whatreq" != "Server" ] ;then

        CN="`openssl x509 -in $CA_PATH/newcerts/$serial.pem -noout -subject |awk -F 'CN=' '{print $2}'`"
        L="`openssl x509 -in $CA_PATH/newcerts/$serial.pem -noout -subject |awk -F '/' '{print $5}' | awk -F 'L=' '{print $2}'`"
        mysql -u root -p${mysqlpswd} RA --exec "update users set DN='$DN', FLname='$CN', Institute='$L' where email='$EMAIL'"
      else

        mysql -u root -p${mysqlpswd} RA --exec "update users set DN='$DN' where email='$EMAIL'"
      fi

   done
 else
    dialog --error --text="No file selected"
 fi
 main
}
#########################################################################

send_mail (){

  EMAIL="`openssl x509 -in $CA_PATH/newcerts/$serial.pem -noout -email`"

  CN=`openssl x509 -in $CA_PATH/newcerts/$serial.pem -noout -subject |awk -F 'CN=' '{print $2}'`

  CA_NAME="`php -r 'include("/var/www/CA/phpinc/varsCA.inc");echo "$CAname\n";'`"

  admin="`php -r 'include("/var/www/CA/phpinc/varsCA.inc");echo "$webmaster\n";'`"

  if [ "$1" == "User or Robot" ] ;then

   /usr/sbin/sendmail -t -n <<EOF
From: $CA_NAME-CA <root@$HOSTNAME>
To: $EMAIL
Subject: Personal Certificate for $CN
Dear User,

you can download your Personal Certificate going,
*with the same browser you used to submit the request*,
from the URL:

   https://$ip/cgi-bin/$SCRIPT_PL?$serial

Your certificate will be valid for one year and you will be notified in due time for renewal.

In case of problems with the certificate contact $admin. 

Best Regards
EOF
  fi

  if [ "$1" == "Server" ] ;then


   /usr/sbin/sendmail -t -n <<EOF
From: $CA_NAME CA <root@$HOSTNAME>
To: $EMAIL 
Subject: Host Certificate for $CN
Dear System Administrator,

attached you will find the requested certificate for host $CN. 
Please make a backup copy of it, together with the private key, and keep them safely.

In case of problems with the certificate, please contact $admin. 


`openssl x509 -in ${CA_PATH}/newcerts/$serial.pem`


Best Regards
EOF
  fi
}
#########################################################################

do_revoke () {
  str=`dialog --entry --text "Enter the serial number to revoke"`
  if [ "$str" == "" ] ; then
    dialog --warning --text "Please find serial number at the url:\n https://`hostname`/CA/mgt/restricted/scert.php"
  else
    ins_pass
    openssl ca -revoke $CA_PATH/newcerts/$str.pem -config $CA_PATH/openssl.cnf -passin pass:$passwd -batch &> $LOG
    if [ $? -eq 0 ] ; then
       dialog --info --text "Certificate $str has been revoked"
    else
       dialog --error --text "ERROR while revoking $str certificate: \n `cat $LOG`"
    fi
  fi
  main
}
#########################################################################

main () {
 choise=`dialog --title "Certification Authority Management" --text "Make a choise: " --list --radiolist --column="Select" --column="Description" True "Sign a request" False "Revoke a certificate" False "Update the CRL" False "Add/Remove RA" False "Reset CA"`
 case $choise in
   "Sign a request" ) do_sign ;;
   "Revoke a certificate" ) do_revoke;;
   "Update the CRL" ) do_crl;;
   "Add/Remove RA" ) do_RA;;
   "Reset CA" ) do_reset;;
   "" ) exit;;
 esac
}
#########################################################################


if [ -e $CA_PATH/CAcert.pem ]; then
  main
else
  whatreset="All"
  do_ins
fi

